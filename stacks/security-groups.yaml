Description: >
    This template contains the security groups required by our entire stack.
    We create them in a seperate nested template, so they can be referenced
    by all of the other nested templates.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the security groups should be deployed to

    BastionCidr:
        Type: String
        Description: Provide a CIDR for SSH Access to be provided too.
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

Resources:
    # This security group defines who/where is allowed to access the Bastion Host.
    BastionHostSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPC
            GroupDescription: Access to the Bastion Host
            SecurityGroupIngress:
              - CidrIp: !Ref BastionCidr
                FromPort: 22
                ToPort: 22
                IpProtocol: tcp
            Tags:
              - Key: Name
                Value: !Sub ${EnvironmentName}-Bastion-Hosts

    DatabaseSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPC
            GroupDescription: Access to the Database
            SecurityGroupIngress:
              - SourceSecurityGroupId: !GetAtt [ "LambdaSecurityGroup", "GroupId" ]
                FromPort: 5432
                ToPort: 5432
                IpProtocol: tcp
              - SourceSecurityGroupId: !GetAtt [ "ECSHostSecurityGroup", "GroupId" ]
                FromPort: 5432
                ToPort: 5432
                IpProtocol: tcp
            Tags:
              - Key: Name
                Value: !Sub ${EnvironmentName}-Database-Hosts

    LambdaSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPC
            GroupDescription: Security Group for Lambda Functions
            SecurityGroupEgress:
              - CidrIp: 0.0.0.0/0
                IpProtocol: -1
            Tags:
              - Key: Name
                Value: !Sub ${EnvironmentName}-Lambda-Functions

    # This security group defines who/where is allowed to access the ECS hosts directly.
    # By default we're just allowing access from the load balancer.  If you want to SSH
    # into the hosts, or expose non-load balanced services you can open their ports here.
    ECSHostSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPC
            GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
            SecurityGroupIngress:
                # Only allow inbound access to ECS from the ALB
                - SourceSecurityGroupId: !GetAtt [ "LoadBalancerSecurityGroup", "GroupId" ]
                  FromPort: 0
                  ToPort: 65535
                  IpProtocol: tcp
                # Allow SSH from the Bastion host
                - SourceSecurityGroupId: !GetAtt [ "BastionHostSecurityGroup", "GroupId" ]
                  FromPort: 22
                  ToPort: 22
                  IpProtocol: tcp
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ECS-Hosts

    # This security group defines who/where is allowed to access the Application Load Balancer.
    # We'll eventually want this opened up to the  public internet (0.0.0.0/0)
    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPC
            GroupDescription: Access to the load balancer that sits in front of ECS
            SecurityGroupIngress:
              - CidrIp: !Ref BastionCidr
                FromPort: 443
                ToPort: 443
                IpProtocol: tcp
              # Allow access from anywhere to our ECS services
              #- CidrIp: 0.0.0.0/0
              #  IpProtocol: -1
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-LoadBalancers

Outputs:

    ECSHostSecurityGroup:
        Description: A reference to the security group for ECS hosts
        Value: !GetAtt [ "ECSHostSecurityGroup", "GroupId" ]

    LoadBalancerSecurityGroup:
        Description: A reference to the security group for load balancers
        Value: !GetAtt [ "LoadBalancerSecurityGroup", "GroupId" ]

    BastionHostSecurityGroup:
        Description: A reference to the security group for the Bastion
        Value: !GetAtt [ "BastionHostSecurityGroup", "GroupId" ]

    DatabaseSecurityGroup:
        Description: A reference to the security group for the Database
        Value: !GetAtt [ "DatabaseSecurityGroup", "GroupId" ]

    LambdaSecurityGroup:
        Description: A reference to the security group for Lambdas
        Value: !GetAtt [ "LambdaSecurityGroup", "GroupId" ]
